name: Deploy Front (S3+CF)

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  deploy-front:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - run: pnpm install --frozen-lockfile

      - name: Build Astro
        env:
          NODE_ENV: production
          PUBLIC_API_URL: ${{ vars.PUBLIC_API_URL }}
          PUBLIC_PUBLISH_BASE_URL: ${{ vars.PUBLIC_PUBLISH_BASE_URL }}
          PUBLIC_COGNITO_DOMAIN: ${{ secrets.PUBLIC_COGNITO_DOMAIN }}
          PUBLIC_COGNITO_CLIENT_ID: ${{ secrets.PUBLIC_COGNITO_CLIENT_ID }}
          PUBLIC_COGNITO_USER_POOL_ID: ${{ secrets.PUBLIC_COGNITO_USER_POOL_ID }}
          PUBLIC_COGNITO_REDIRECT_URI: ${{ secrets.PUBLIC_COGNITO_REDIRECT_URI }}
        run: pnpm build

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 1) 파일 구조 동기화(삭제 포함) — 헤더는 아직 X
      - name: Sync all files (no headers yet)
        run: |
          aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_WEB }} --delete

      # 2) 전체 객체 Cache-Control 강제 덮어쓰기 (캐시 완전 비활성화)
      - name: Force replace Cache-Control headers (disable all caching)
        run: |
          aws s3 cp dist/ s3://${{ secrets.S3_BUCKET_WEB }} \
            --recursive \
            --metadata-directive REPLACE \
            --cache-control "no-cache, no-store, must-revalidate"

      # 3) CloudFront 캐시 무효화
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CF_DIST_ID }} \
            --paths "/*"
