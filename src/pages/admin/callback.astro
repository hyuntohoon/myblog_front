---
/* src/pages/admin/callback.astro */
---
<!doctype html>
<html lang="ko">
  <head>
    <meta charset="utf-8" />
    <title>로그인 처리중…</title>
    <meta name="robots" content="noindex" />
  </head>
  <body>
    <p id="msg">로그인 처리중…</p>
    <button id="retry" class="hidden">다시 로그인</button>

    <script type="module">
      import { handleCallback, goLogin } from '/src/lib/auth.ts';

      const log = (m) => {
        console.log(m);
        const el = document.getElementById('msg');
        if (el) el.textContent = m;
      };

      async function run() {
        try {
          log('🔄 콜백 처리 시작…');

          const qs = new URLSearchParams(location.search);
          const code = qs.get('code');
          const state = qs.get('state');
          const verifier = sessionStorage.getItem('pkce_verifier');
          const savedState = sessionStorage.getItem('oauth_state');

          console.log('[callback]', { code, state, verifierExists: !!verifier, savedState });

          if (!code) {
            log('❌ code 없음. 다시 로그인합니다…');
            await goLogin(true);
            return;
          }
          if (!verifier || !savedState || savedState !== state) {
            log('⚠️ 세션 만료/새 탭 문제. 다시 로그인합니다…');
            await goLogin(true);
            return;
          }

          log('🔑 토큰 교환 중…');
          await handleCallback(); // 토큰 저장

          log('✅ 로그인 완료. 이동합니다…');
          location.replace('/write');  // 성공 후 이동할 페이지
        } catch (e) {
          console.error(e);
          log('❌ 로그인 처리 실패: ' + (e?.message ?? String(e)));
          document.getElementById('retry')?.classList.remove('hidden');
        }
      }

      document.getElementById('retry')?.addEventListener('click', () => goLogin(true));
      run();
    </script>
  </body>
</html>