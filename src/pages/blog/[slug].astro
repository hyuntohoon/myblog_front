---
import { getCollection, render } from 'astro:content'
import Seo from '@components/seo.astro'
import Layout from '@layouts/layout.astro'
import Prose from '@components/prose.astro'
import { SITE } from '@constants'
import { defaultDateFormat, isoDateFormat } from '@utils'
import SkipNavContent from '@components/a11y/skip-nav-content.astro'
import Spacer from '@components/spacer.astro'
// 태그 컴포넌트는 더 이상 사용하지 않으므로 제거
// import TagLinks from '@components/tag-links.astro'
import Aside from '@components/aside.astro'
import Playground from '@components/playground.astro'

// /blog/[slug] 경로를 생성
export async function getStaticPaths() {
  const entries = await getCollection('blog')
  return entries.map((e) => ({
    params: { slug: e.data.slug }, // ← 'slug'로 이름 변경
    props: { entry: e },
  }))
}

const { entry } = Astro.props
const { data: post } = entry
const { Content } = await render(entry)
---

<Layout>
  <Seo slot="seo" forceTitle={post.title} description={post.description} image={post.image}>
    <meta name="twitter:label1" value="Author" />
    <meta name="twitter:data1" data-pagefind-meta="author" value={SITE.defaultAuthor} />
    <!-- 태그 메타 제거, 카테고리 메타만 유지(원하면 표시) -->
    <meta name="article:published_time" data-pagefind-meta="published_time" content={isoDateFormat(post.date)} />
    <meta name="article:modified_time" data-pagefind-meta="modified_time" content={isoDateFormat(post.lastUpdated)} />
    <meta name="article:section" content={post.category} />
  </Seo>

  <SkipNavContent searchIndex={post.searchIndex}>
    <Prose>
      <h1 class="mb-0!" data-pagefind-meta="title">{post.title}</h1>
      <Spacer axis="vertical" size={4} />
      <div class="text-faded">
        {defaultDateFormat(post.date)} — {post.category}
      </div>
      <Spacer axis="vertical" size={12} />
      <Content components={{ Aside, Playground }} />
    </Prose>
  </SkipNavContent>
</Layout>